# --- Genkit / Google AI ---
# Required for Genkit AI features using Google models
GOOGLE_GENAI_API_KEY=YOUR_GOOGLE_GENAI_API_KEY_HERE

# --- Ollama ---
# Optional: Base URL for a running Ollama instance (local or remote)
# Used by Langchain integration if selected.
OLLAMA_BASE_URL=http://localhost:11434

# --- Redis ---
# Required for backend services (Collaboration, Sessions, potentially Caching)
# Use redis:// for local/unsecured, rediss:// for TLS connections
REDIS_URL=redis://localhost:6379
# Example with password: REDIS_URL=redis://:yourpassword@localhost:6379

# --- Secrets Service ---
# Required: A strong, unique key for encrypting secrets in the vault.
# Generate one using e.g., `openssl rand -base64 32`
SECRET_VAULT_KEY=generate_a_strong_32_byte_secret_key

# --- Service URLs (for Frontend Client) ---
# URL the frontend uses to connect to the collaboration WebSocket server.
# If running frontend/backend separately (not Docker Compose), set this to the backend host/port.
# If using Docker Compose and accessing from browser, use localhost:exposed_port.
# If deploying behind ingress, use the public ingress URL/path.
NEXT_PUBLIC_COLLABORATION_WS_URL=ws://localhost:3001

# Base URL for the secrets service API.
# Can be a direct URL or a proxy path handled by Next.js API routes.
# Example proxy path: /api/proxy/secrets (needs implementation in `src/app/api/proxy/[...slug].ts`)
# Example direct URL (if service is exposed directly): http://localhost:3002
NEXT_PUBLIC_SECRETS_SERVICE_URL=/api/proxy/secrets
# NEXT_PUBLIC_SECRETS_SERVICE_URL=http://localhost:3002 # Alternative

# --- Collaboration Options ---
# Optional: Enable WebRTC for P2P collaboration fallback/enhancement
# NEXT_PUBLIC_USE_WEBRTC=false

# --- Other Potential Variables ---
# DATABASE_URL=...
# GITHUB_CLIENT_ID=...
# GITHUB_CLIENT_SECRET=...
# NEXTAUTH_URL=...
# NEXTAUTH_SECRET=...
